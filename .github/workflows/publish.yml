name: Publish

on:
  push:
    branches: [main]
  repository_dispatch:
    types: publish-npm
  workflow_dispatch:

permissions:
  contents: write

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: npm ci

      - name: Set Release Tag
        id: set_tag
        run: echo "RELEASE_TAG=v$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Check if Tag Exists
        id: check_tag
        run: |
          if git ls-remote --tags origin | grep -q "refs/tags/${{ env.RELEASE_TAG }}"; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Create Release
        if: env.TAG_EXISTS == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create ${{ env.RELEASE_TAG }} --target=$GITHUB_SHA --title="${{ env.RELEASE_TAG }}" --generate-notes

      - name: Get package info
        id: package
        uses: andreigiura/action-nodejs-package-info@v1.0.2

      - name: Bump Patch Version if Tag Exists
        if: env.TAG_EXISTS == 'true'
        run: |
          NEW_VERSION=$(node -p "let v = require('./package.json').version.split('.'); v[2] = parseInt(v[2]) + 1; v.join('.')")  
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "RELEASE_TAG=v$NEW_VERSION" >> $GITHUB_ENV

      - name: Publish to npmjs (Next Version)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: ${{ steps.package.outputs.is-prerelease == 'true' }}
        run: echo "Publishing pre-release..." && npm publish --tag next

      - name: Publish to npmjs
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: ${{ steps.package.outputs.is-prerelease == 'false' }}
        run: npm publish
